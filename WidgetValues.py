
# ##### BEGIN GPL LICENSE BLOCK #####

#    EZ Controls Blender Rigging Assistant
#    Copyright (C) 2020 Alexander Mhiko McIvor

#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.

#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
# ##### END GPL LICENSE BLOCK #####


import bpy
"---------------------------------------------------------------------------------------------------------------------------------------------"
"Custom Shapes"
"---------------------------------------------------------------------------------------------------------------------------------------------"


def createShapeWidget(name,verts,edges,faces):
    context = bpy.context
    me = bpy.data.meshes.new(name)
    me.from_pydata(verts, edges, faces)
    ob = bpy.data.objects.new(name, me)
    context.collection.objects.link(ob)
    context.view_layer.objects.active = ob

def create_rightCurveArrow_widget(name, size):
    verts = [(0.141877 * size, 0.0649743 * size, 5.39424e-09 * size),
                  (0.264882 * size, 0.0522657 * size, 3.32374e-09 * size),
                  (0.134635 * size, 0.147593 * size, 1.88545e-08 * size),
                  (0.137832 * size, 0.100238 * size, 1.11394e-08 * size),
                  (0.141155 * size, 0.0284712 * size, -5.52882e-10 * size),
                  (0.142264 * size, -0.0188207 * size, -8.2577e-09 * size),
                  (0.0617672 * size, 0.0987145 * size, 1.08912e-08 * size),
                  (0.068196 * size, 0.0661895 * size, 5.59222e-09 * size),
                  (-0.0126148 * size, 0.0821914 * size, 8.19925e-09 * size),
                  (0.00101283 * size, 0.0477701 * size, 2.59131e-09 * size),
                  (-0.0944145 * size, 0.0193667 * size, -2.03618e-09 * size),
                  (-0.0667245 * size, -0.00579321 * size, -6.13526e-09 * size),
                  (-0.138201 * size, -0.0739204 * size, -1.72346e-08 * size),
                  (-0.100015 * size, -0.0890566 * size, -1.97006e-08 * size),
                  (-0.152519 * size, -0.255651 * size, -4.68423e-08 * size),
                  (-0.1118 * size, -0.257423 * size, -4.71309e-08 * size),
                  (-0.0747972 * size, -0.258817 * size, -4.7358e-08 * size),
                  (-0.0625442 * size, -0.098265 * size, -2.12008e-08 * size),
                  (-0.03186 * size, -0.0295708 * size, -1.00091e-08 * size),
                  (0.0155676 * size, 0.0103613 * size, -3.50335e-09 * size),
                  (0.0741125 * size, 0.0284429 * size, -5.57489e-10 * size), ]
    edges = [(0, 3), (0, 1), (1, 2), (2, 3), (1, 5), (0, 4), (4, 5), (0, 7), (3, 6), (6, 7),
                  (6, 8), (8, 9), (7, 9), (9, 11), (8, 10), (10, 11), (10, 12), (12, 13), (11, 13), (13, 15),
                  (12, 14), (14, 15), (15, 16), (16, 17), (13, 17), (17, 18), (11, 18), (18, 19), (9, 19), (19, 20),
                  (7, 20), (4, 20), ]
    faces = [(0, 1, 2, 3,), (1, 0, 4, 5,), (0, 3, 6, 7,), (6, 8, 9, 7,), (9, 8, 10, 11,), (10, 12, 13, 11,),
                  (13, 12, 14, 15,), (15, 16, 17, 13,), (13, 17, 18, 11,), (18, 19, 9, 11,),
                  (9, 19, 20, 7,),
                  (20, 4, 0, 7,), ]
    createShapeWidget(name, verts, edges, faces)

def create_rightCurveArrowWireframe_widget(name, size):
    verts = [(0.264882 * size, 0.0522657 * size, 3.32374e-09 * size),
                  (0.134635 * size, 0.147593 * size, 1.88545e-08 * size),
                  (0.137832 * size, 0.100238 * size, 1.11394e-08 * size),
                  (0.141155 * size, 0.0284712 * size, -5.52882e-10 * size),
                  (0.142264 * size, -0.0188207 * size, -8.2577e-09 * size),
                  (0.0617672 * size, 0.0987145 * size, 1.08912e-08 * size),
                  (-0.0126148 * size, 0.0821914 * size, 8.19925e-09 * size),
                  (-0.0944145 * size, 0.0193667 * size, -2.03618e-09 * size),
                  (-0.138201 * size, -0.0739204 * size, -1.72346e-08 * size),
                  (-0.152519 * size, -0.255651 * size, -4.68423e-08 * size),
                  (-0.1118 * size, -0.257423 * size, -4.71309e-08 * size),
                  (-0.0747972 * size, -0.258817 * size, -4.7358e-08 * size),
                  (-0.0625442 * size, -0.098265 * size, -2.12008e-08 * size),
                  (-0.03186 * size, -0.0295708 * size, -1.00091e-08 * size),
                  (0.0155676 * size, 0.0103613 * size, -3.50335e-09 * size),
                  (0.0741125 * size, 0.0284429 * size, -5.57489e-10 * size),
                  ]
    edges = [(0, 1), (1, 2), (0, 4), (3, 4), (2, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10),
                  (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (3, 15), ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_leftCurveArrow_widget(name, size):
    verts = [(-0.141877 * size, 0.0649743 * size, 5.39424e-09 * size),
                  (-0.264882 * size, 0.0522657 * size, 3.32374e-09 * size),
                  (-0.134635 * size, 0.147593 * size, 1.88545e-08 * size),
                  (-0.137832 * size, 0.100238 * size, 1.11394e-08 * size),
                  (-0.141155 * size, 0.0284712 * size, -5.52882e-10 * size),
                  (-0.142264 * size, -0.0188207 * size, -8.2577e-09 * size),
                  (-0.0617672 * size, 0.0987145 * size, 1.08912e-08 * size),
                  (-0.068196 * size, 0.0661895 * size, 5.59222e-09 * size),
                  (0.0126148 * size, 0.0821914 * size, 8.19925e-09 * size),
                  (-0.00101283 * size, 0.0477701 * size, 2.59131e-09 * size),
                  (0.0944145 * size, 0.0193667 * size, -2.03618e-09 * size),
                  (0.0667245 * size, -0.00579321 * size, -6.13526e-09 * size),
                  (0.138201 * size, -0.0739204 * size, -1.72346e-08 * size),
                  (0.100015 * size, -0.0890566 * size, -1.97006e-08 * size),
                  (0.152519 * size, -0.255651 * size, -4.68423e-08 * size),
                  (0.1118 * size, -0.257423 * size, -4.71309e-08 * size),
                  (0.0747972 * size, -0.258817 * size, -4.7358e-08 * size),
                  (0.0625442 * size, -0.098265 * size, -2.12008e-08 * size),
                  (0.03186 * size, -0.0295708 * size, -1.00091e-08 * size),
                  (-0.0155676 * size, 0.0103613 * size, -3.50335e-09 * size),
                  (-0.0741125 * size, 0.0284429 * size, -5.57489e-10 * size), ]
    edges = [(0, 3), (0, 1), (1, 2), (2, 3), (1, 5), (0, 4), (4, 5), (0, 7), (3, 6), (6, 7),
                  (6, 8), (8, 9), (7, 9), (9, 11), (8, 10), (10, 11), (10, 12), (12, 13), (11, 13), (13, 15),
                  (12, 14), (14, 15), (15, 16), (16, 17), (13, 17), (17, 18), (11, 18), (18, 19), (9, 19), (19, 20),
                  (7, 20), (4, 20), ]
    faces = [(0, 1, 2, 3,), (1, 0, 4, 5,), (0, 3, 6, 7,), (6, 8, 9, 7,), (9, 8, 10, 11,), (10, 12, 13, 11,),
                  (13, 12, 14, 15,), (15, 16, 17, 13,), (13, 17, 18, 11,), (18, 19, 9, 11,),
                  (9, 19, 20, 7,),
                  (20, 4, 0, 7,), ]
    createShapeWidget(name, verts, edges, faces)

def create_leftCurveWireframe_widget(name, size):
    verts = [(-0.264882 * size, 0.0522657 * size, 3.32374e-09 * size),
                  (-0.134635 * size, 0.147593 * size, 1.88545e-08 * size),
                  (-0.137832 * size, 0.100238 * size, 1.11394e-08 * size),
                  (-0.141155 * size, 0.0284712 * size, -5.52882e-10 * size),
                  (-0.142264 * size, -0.0188207 * size, -8.2577e-09 * size),
                  (-0.0617672 * size, 0.0987145 * size, 1.08912e-08 * size),
                  (0.0126148 * size, 0.0821914 * size, 8.19925e-09 * size),
                  (0.0944145 * size, 0.0193667 * size, -2.03618e-09 * size),
                  (0.138201 * size, -0.0739204 * size, -1.72346e-08 * size),
                  (0.152519 * size, -0.255651 * size, -4.68423e-08 * size),
                  (0.1118 * size, -0.257423 * size, -4.71309e-08 * size),
                  (0.0747972 * size, -0.258817 * size, -4.7358e-08 * size),
                  (0.0625442 * size, -0.098265 * size, -2.12008e-08 * size),
                  (0.03186 * size, -0.0295708 * size, -1.00091e-08 * size),
                  (-0.0155676 * size, 0.0103613 * size, -3.50335e-09 * size),
                  (-0.0741125 * size, 0.0284429 * size, -5.57489e-10 * size),
                  ]
    edges = [(0, 1), (1, 2), (0, 4), (3, 4), (2, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10),
                  (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (3, 15), ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_Arrow_widget(name, size):
    verts = [(-0.00167843 * size, 0.150467 * size, 2.03291e-08 * size),
                  (0.0303943 * size, -0.000714511 * size, -4.30145e-09 * size),
                  (-0.0332346 * size, -0.002286 * size, -4.5575e-09 * size),
                  (0.02992 * size, 0.151247 * size, 2.04563e-08 * size),
                  (-0.0337088 * size, 0.149676 * size, 2.02002e-08 * size),
                  (-0.00142014 * size, -0.00150001 * size, -4.42945e-09 * size),
                  (0.000317842 * size, 0.238551 * size, 3.46799e-08 * size),
                  (-0.0666068 * size, 0.150561 * size, 2.03445e-08 * size),
                  (0.0629411 * size, 0.150514 * size, 2.03368e-08 * size),
                  (-0.00116184 * size, -0.153467 * size, -2.9188e-08 * size),
                  (-0.0327605 * size, -0.154248 * size, -2.93152e-08 * size),
                  (0.0308685 * size, -0.152676 * size, -2.90592e-08 * size),
                  ]
    edges = [(0, 3), (3, 1), (2, 5), (10, 2), (0, 4), (9, 5), (1, 5), (0, 6), (6, 7), (4, 7),
                  (6, 8), (3, 8), (9, 10), (9, 11), (5, 0), (2, 4), (1, 11), ]
    faces = [(2, 10, 9, 5,), (11, 1, 5, 9,), (0, 6, 7, 4,), (6, 0, 3, 8,), (4, 2, 5, 0,),
                  (1, 3, 0, 5,), ]
    createShapeWidget(name, verts, edges, faces)

def create_ArrowWireframe_widget(name, size):
    verts = [(0.0303943 * size, -0.000714511 * size, -4.30145e-09 * size),
                  (-0.0332346 * size, -0.002286 * size, -4.5575e-09 * size),
                  (0.02992 * size, 0.151247 * size, 2.04563e-08 * size),
                  (-0.0337088 * size, 0.149676 * size, 2.02002e-08 * size),
                  (0.000317842 * size, 0.238551 * size, 3.46799e-08 * size),
                  (-0.0666068 * size, 0.150561 * size, 2.03445e-08 * size),
                  (0.0629411 * size, 0.150514 * size, 2.03368e-08 * size),
                  (-0.00116184 * size, -0.153467 * size, -2.9188e-08 * size),
                  (-0.0327605 * size, -0.154248 * size, -2.93152e-08 * size),
                  (0.0308685 * size, -0.152676 * size, -2.90592e-08 * size),
                  ]
    edges = [(2, 0), (8, 1), (4, 5), (3, 5), (4, 6), (2, 6), (7, 8), (7, 9), (1, 3), (0, 9),
                  ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_doublesidedArrow_widget(name, size):
    verts = [(-0.00167843 * size, 0.150467 * size, 2.03291e-08 * size),
                  (-0.00117323 * size, 0.0289713 * size, 5.35015e-10 * size),
                  (0.0338823 * size, 0.0322592 * size, 1.07068e-09 * size),
                  (0.02992 * size, 0.151247 * size, 2.04563e-08 * size),
                  (-0.0337088 * size, 0.149676 * size, 2.02002e-08 * size),
                  (-0.0343413 * size, 0.0297164 * size, 6.56409e-10 * size),
                  (0.000317842 * size, 0.238551 * size, 3.46799e-08 * size),
                  (-0.0666068 * size, 0.150561 * size, 2.03445e-08 * size),
                  (0.0629411 * size, 0.150514 * size, 2.03368e-08 * size),
                  (-0.00116184 * size, -0.153467 * size, -2.9188e-08 * size),
                  (-0.00166732 * size, -0.031972 * size, -9.3939e-09 * size),
                  (-0.0343881 * size, -0.0312368 * size, -9.27413e-09 * size),
                  (-0.0327605 * size, -0.154248 * size, -2.93152e-08 * size),
                  (0.0308685 * size, -0.152676 * size, -2.90592e-08 * size),
                  (0.0315008 * size, -0.0327171 * size, -9.51529e-09 * size),
                  (-0.00315839 * size, -0.241552 * size, -4.35387e-08 * size),
                  (0.0637665 * size, -0.153562 * size, -2.92034e-08 * size),
                  (-0.0657816 * size, -0.153515 * size, -2.91957e-08 * size),
                  (-0.0340772 * size, -0.000464172 * size, -4.26063e-09 * size),
                  (-0.0027213 * size, -0.00255333 * size, -4.60099e-09 * size),
                  (0.0331369 * size, -0.000908959 * size, -4.33309e-09 * size), ]
    edges = [(0, 3), (0, 1), (1, 2), (2, 3), (0, 4), (4, 5), (1, 5), (0, 6), (6, 7), (4, 7),
                  (6, 8), (3, 8), (9, 12), (9, 10), (10, 11), (11, 12), (9, 13), (13, 14), (10, 14), (9, 15),
                  (15, 16), (13, 16), (15, 17), (12, 17), (5, 18), (18, 19), (1, 19), (10, 19), (11, 18), (14, 20),
                  (19, 20), (2, 20), ]
    faces = [(0, 1, 2, 3,), (4, 5, 1, 0,), (0, 6, 7, 4,), (6, 0, 3, 8,), (9, 10, 11, 12,), (13, 14, 10, 9,),
                  (9, 15, 16, 13,), (15, 9, 12, 17,), (5, 18, 19, 1,), (19, 18, 11, 10,),
                  (14, 20, 19, 10,),
                  (19, 20, 2, 1,), ]
    createShapeWidget(name, verts, edges, faces)

def create_doublesidedArrowWireframe_widget(name, size):
    verts = [(0.0338823 * size, 0.0322592 * size, 1.07068e-09 * size),
                  (0.02992 * size, 0.151247 * size, 2.04563e-08 * size),
                  (-0.0337088 * size, 0.149676 * size, 2.02002e-08 * size),
                  (-0.0343413 * size, 0.0297164 * size, 6.56409e-10 * size),
                  (0.000317842 * size, 0.238551 * size, 3.46799e-08 * size),
                  (-0.0666068 * size, 0.150561 * size, 2.03445e-08 * size),
                  (0.0629411 * size, 0.150514 * size, 2.03368e-08 * size),
                  (-0.00166732 * size, -0.031972 * size, -9.3939e-09 * size),
                  (-0.0343881 * size, -0.0312368 * size, -9.27413e-09 * size),
                  (-0.0327605 * size, -0.154248 * size, -2.93152e-08 * size),
                  (0.0308685 * size, -0.152676 * size, -2.90592e-08 * size),
                  (0.0315008 * size, -0.0327171 * size, -9.51529e-09 * size),
                  (-0.00315839 * size, -0.241552 * size, -4.35387e-08 * size),
                  (0.0637665 * size, -0.153562 * size, -2.92034e-08 * size),
                  (-0.0657816 * size, -0.153515 * size, -2.91957e-08 * size),
                  (-0.0340772 * size, -0.000464172 * size, -4.26063e-09 * size),
                  (-0.0027213 * size, -0.00255333 * size, -4.60099e-09 * size),
                  (0.0331369 * size, -0.000908959 * size, -4.33309e-09 * size),
                  ]
    edges = [(0, 1), (2, 3), (4, 5), (2, 5), (4, 6), (1, 6), (8, 9), (10, 11), (12, 13), (10, 13), (12, 14),
                  (9, 14), (3, 15), (7, 16), (8, 15), (11, 17), (0, 17), ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_3sideArrow_widget(name, size):
    verts = [(-0.00180026 * size, 0.161389 * size, 2.18048e-08 * size),
                  (-0.0012584 * size, 0.0310742 * size, 5.73851e-10 * size),
                  (0.0350896 * size, 0.0324431 * size, 7.96869e-10 * size),
                  (0.0320918 * size, 0.162226 * size, 2.19412e-08 * size),
                  (-0.0361557 * size, 0.16054 * size, 2.16665e-08 * size),
                  (-0.0375013 * size, 0.0332622 * size, 9.30311e-10 * size),
                  (0.000340914 * size, 0.255867 * size, 3.71972e-08 * size),
                  (-0.0714417 * size, 0.16149 * size, 2.18213e-08 * size),
                  (0.0675099 * size, 0.161439 * size, 2.1813e-08 * size),
                  (0.165857 * size, -0.000433074 * size, -4.55934e-09 * size),
                  (0.0355426 * size, -0.000974939 * size, -4.64762e-09 * size),
                  (0.0347538 * size, -0.0360712 * size, -1.03655e-08 * size),
                  (0.166694 * size, -0.0343251 * size, -1.00811e-08 * size),
                  (0.165009 * size, 0.0339223 * size, 1.03786e-09 * size),
                  (0.260335 * size, -0.00257425 * size, -4.90818e-09 * size),
                  (0.165958 * size, 0.0692083 * size, 6.78668e-09 * size),
                  (0.165908 * size, -0.0697432 * size, -1.58514e-08 * size),
                  (-0.169272 * size, -0.000987165 * size, -4.64962e-09 * size),
                  (-0.0389573 * size, -0.0004453 * size, -4.56133e-09 * size),
                  (-0.170109 * size, 0.0329049 * size, 8.72105e-10 * size),
                  (-0.168424 * size, -0.0353426 * size, -1.02468e-08 * size),
                  (-0.0397565 * size, -0.0360207 * size, -1.03573e-08 * size),
                  (-0.26375 * size, 0.00115401 * size, -4.30077e-09 * size),
                  (-0.169373 * size, -0.0706286 * size, -1.59956e-08 * size),
                  (-0.169322 * size, 0.0683229 * size, 6.64244e-09 * size),
                  (-0.00170735 * size, -0.000709966 * size, -4.60445e-09 * size),
                  (-0.00250136 * size, -0.0360461 * size, -1.03614e-08 * size), ]
    edges = [(0, 3), (0, 1), (1, 2), (2, 3), (0, 4), (4, 5), (1, 5), (0, 6), (6, 7), (4, 7), (6, 8), (3, 8),
                  (9, 12), (9, 10), (10, 11), (11, 12), (9, 13), (2, 13), (2, 10), (9, 14),
                  (14, 15), (13, 15), (14, 16), (12, 16), (17, 19), (17, 18), (5, 18), (5, 19), (17, 20), (20, 21),
                  (18, 21), (17, 22), (22, 23), (20, 23), (22, 24), (19, 24), (18, 25), (1, 25), (10, 25), (25, 26),
                  (11, 26), (21, 26), ]
    faces = [(0, 1, 2, 3,), (4, 5, 1, 0,), (0, 6, 7, 4,), (6, 0, 3, 8,), (9, 10, 11, 12,), (13, 2, 10, 9,),
                  (9, 14, 15, 13,), (14, 9, 12, 16,), (17, 18, 5, 19,), (20, 21, 18, 17,),
                  (17, 22, 23, 20,), (22, 17, 19, 24,), (5, 18, 25, 1,), (1, 25, 10, 2,), (26, 11, 10, 25,),
                  (18, 21, 26, 25,), ]
    createShapeWidget(name, verts, edges, faces)

def create_3sideArrowWireframe_widget( name, size):
    verts = [(0.0350896 * size, 0.0324431 * size, 7.96869e-10 * size),
                  (0.0320918 * size, 0.162226 * size, 2.19412e-08 * size),
                  (-0.0361557 * size, 0.16054 * size, 2.16665e-08 * size),
                  (-0.0375013 * size, 0.0332622 * size, 9.30311e-10 * size),
                  (0.000340914 * size, 0.255867 * size, 3.71972e-08 * size),
                  (-0.0714417 * size, 0.16149 * size, 2.18213e-08 * size),
                  (0.0675099 * size, 0.161439 * size, 2.1813e-08 * size),
                  (0.0347538 * size, -0.0360712 * size, -1.03655e-08 * size),
                  (0.166694 * size, -0.0343251 * size, -1.00811e-08 * size),
                  (0.165009 * size, 0.0339223 * size, 1.03786e-09 * size),
                  (0.260335 * size, -0.00257425 * size, -4.90818e-09 * size),
                  (0.165958 * size, 0.0692083 * size, 6.78668e-09 * size),
                  (0.165908 * size, -0.0697432 * size, -1.58514e-08 * size),
                  (-0.170109 * size, 0.0329049 * size, 8.72105e-10 * size),
                  (-0.168424 * size, -0.0353426 * size, -1.02468e-08 * size),
                  (-0.0397565 * size, -0.0360207 * size, -1.03573e-08 * size),
                  (-0.26375 * size, 0.00115401 * size, -4.30077e-09 * size),
                  (-0.169373 * size, -0.0706286 * size, -1.59956e-08 * size),
                  (-0.169322 * size, 0.0683229 * size, 6.64244e-09 * size),
                  (-0.00250136 * size, -0.0360461 * size, -1.03614e-08 * size),
                  ]
    edges = [(0, 1), (2, 3), (4, 5), (2, 5), (4, 6), (1, 6), (7, 8), (0, 9), (10, 11), (9, 11), (10, 12),
                  (8, 12), (3, 13), (14, 15), (16, 17), (14, 17), (16, 18), (13, 18), (7, 19), (15, 19),
                  ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_4sideArrow_widget(name, size):
    verts = [(-0.000674411 * size, 0.206244 * size, 2.77659e-08 * size),
                  (1.55909e-05 * size, 0.0403033 * size, 7.30733e-10 * size),
                  (0.047895 * size, 0.044794 * size, 1.46235e-09 * size),
                  (0.0424832 * size, 0.20731 * size, 2.79396e-08 * size),
                  (-0.044422 * size, 0.205163 * size, 2.75898e-08 * size),
                  (-0.045286 * size, 0.041321 * size, 8.96535e-10 * size),
                  (0.00205213 * size, 0.326551 * size, 4.73663e-08 * size),
                  (-0.0893546 * size, 0.206373 * size, 2.77869e-08 * size),
                  (0.087584 * size, 0.206308 * size, 2.77764e-08 * size),
                  (3.11586e-05 * size, -0.208875 * size, -3.98655e-08 * size),
                  (-0.000659233 * size, -0.042934 * size, -1.28303e-08 * size),
                  (-0.0453498 * size, -0.0419299 * size, -1.26668e-08 * size),
                  (-0.0431268 * size, -0.20994 * size, -4.00392e-08 * size),
                  (0.0437788 * size, -0.207794 * size, -3.96895e-08 * size),
                  (0.0446423 * size, -0.0439516 * size, -1.29961e-08 * size),
                  (-0.00269577 * size, -0.329181 * size, -5.94659e-08 * size),
                  (0.0887114 * size, -0.209004 * size, -3.98865e-08 * size),
                  (-0.0882276 * size, -0.208939 * size, -3.9876e-08 * size),
                  (0.212818 * size, 0.000182408 * size, -5.80579e-09 * size),
                  (0.046877 * size, -0.000507594 * size, -5.91821e-09 * size),
                  (0.213884 * size, -0.0429752 * size, -1.28371e-08 * size),
                  (0.211737 * size, 0.04393 * size, 1.3216e-09 * size),
                  (0.333125 * size, -0.00254413 * size, -6.25e-09 * size),
                  (0.212947 * size, 0.0888626 * size, 8.64205e-09 * size),
                  (0.212882 * size, -0.088076 * size, -2.01849e-08 * size),
                  (-0.21393 * size, -0.000523161 * size, -5.92074e-09 * size),
                  (-0.0449252 * size, 9.99042e-05 * size, -5.81923e-09 * size),
                  (-0.214996 * size, 0.0426345 * size, 1.11052e-09 * size),
                  (-0.21285 * size, -0.0442708 * size, -1.30481e-08 * size),
                  (-0.334237 * size, 0.00220338 * size, -5.47653e-09 * size),
                  (-0.214059 * size, -0.0892034 * size, -2.03686e-08 * size),
                  (-0.213994 * size, 0.0877352 * size, 8.45837e-09 * size),
                  (-0.00209878 * size, -0.0027535 * size, -6.28411e-09 * size), ]
    edges = [(0, 3), (0, 1), (1, 2), (2, 3), (0, 4), (4, 5), (1, 5), (0, 6), (6, 7), (4, 7),
                  (6, 8), (3, 8), (9, 12), (9, 10), (10, 11), (11, 12), (9, 13), (13, 14), (10, 14), (9, 15),
                  (15, 16), (13, 16), (15, 17), (12, 17), (18, 20), (18, 19), (14, 19), (14, 20), (18, 21), (2, 21),
                  (2, 19), (18, 22), (22, 23), (21, 23), (22, 24), (20, 24), (25, 27), (25, 26), (5, 26), (5, 27),
                  (25, 28), (11, 28), (11, 26), (25, 29), (29, 30), (28, 30), (29, 31), (27, 31), (26, 32), (1, 32),
                  (10, 32), (19, 32), ]
    faces = [(0, 1, 2, 3,), (4, 5, 1, 0,), (0, 6, 7, 4,), (6, 0, 3, 8,), (9, 10, 11, 12,), (13, 14, 10, 9,),
                  (9, 15, 16, 13,), (15, 9, 12, 17,), (18, 19, 14, 20,), (21, 2, 19, 18,),
                  (18, 22, 23, 21,), (22, 18, 20, 24,), (25, 26, 5, 27,), (28, 11, 26, 25,), (25, 29, 30, 28,),
                  (29, 25, 27, 31,), (5, 26, 32, 1,), (32, 26, 11, 10,), (14, 19, 32, 10,), (32, 19, 2, 1,),
                  ]
    createShapeWidget(name, verts, edges, faces)

def create_4sideArrowWireframe_widget(name, size):
    verts = [(1.55909e-05 * size, 0.0403033 * size, 7.30733e-10 * size),
                  (0.047895 * size, 0.044794 * size, 1.46235e-09 * size),
                  (0.0424832 * size, 0.20731 * size, 2.79396e-08 * size),
                  (-0.044422 * size, 0.205163 * size, 2.75898e-08 * size),
                  (-0.045286 * size, 0.041321 * size, 8.96535e-10 * size),
                  (0.00205213 * size, 0.326551 * size, 4.73663e-08 * size),
                  (-0.0893546 * size, 0.206373 * size, 2.77869e-08 * size),
                  (0.087584 * size, 0.206308 * size, 2.77764e-08 * size),
                  (-0.000659233 * size, -0.042934 * size, -1.28303e-08 * size),
                  (-0.0453498 * size, -0.0419299 * size, -1.26668e-08 * size),
                  (-0.0431268 * size, -0.20994 * size, -4.00392e-08 * size),
                  (0.0437788 * size, -0.207794 * size, -3.96895e-08 * size),
                  (0.0446423 * size, -0.0439516 * size, -1.29961e-08 * size),
                  (-0.00269577 * size, -0.329181 * size, -5.94659e-08 * size),
                  (0.0887114 * size, -0.209004 * size, -3.98865e-08 * size),
                  (-0.0882276 * size, -0.208939 * size, -3.9876e-08 * size),
                  (0.213884 * size, -0.0429752 * size, -1.28371e-08 * size),
                  (0.211737 * size, 0.04393 * size, 1.3216e-09 * size),
                  (0.333125 * size, -0.00254413 * size, -6.25e-09 * size),
                  (0.212947 * size, 0.0888626 * size, 8.64205e-09 * size),
                  (0.212882 * size, -0.088076 * size, -2.01849e-08 * size),
                  (-0.214996 * size, 0.0426345 * size, 1.11052e-09 * size),
                  (-0.21285 * size, -0.0442708 * size, -1.30481e-08 * size),
                  (-0.334237 * size, 0.00220338 * size, -5.47653e-09 * size),
                  (-0.214059 * size, -0.0892034 * size, -2.03686e-08 * size),
                  (-0.213994 * size, 0.0877352 * size, 8.45837e-09 * size),
                  (-0.00209878 * size, -0.0027535 * size, -6.28411e-09 * size), ]
    edges = [(1, 2), (3, 4), (5, 6), (3, 6), (5, 7), (2, 7), (9, 10), (11, 12), (13, 14), (11, 14),
                  (13, 15), (10, 15), (12, 16), (1, 17), (18, 19), (17, 19), (18, 20), (16, 20), (4, 21), (9, 22),
                  (23, 24), (22, 24), (23, 25), (21, 25), (0, 26), (8, 26), ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_head_widget( name, size):
    verts = [(0.178412 * size, -0.2067 * size, 0.0355099 * size),
                  (0.236047 * size, -0.186025 * size, 0.0355099 * size),
                  (0.236047 * size, -0.186025 * size, 0.0950732 * size),
                  (0.178412 * size, -0.2067 * size, 0.0950732 * size),
                  (0.178412 * size, -0.2067 * size, -0.0358897 * size),
                  (0.236047 * size, -0.186025 * size, -0.0358897 * size),
                  (0.26995 * size, -0.158202 * size, 0.0355099 * size),
                  (0.26995 * size, -0.158202 * size, -0.0358897 * size),
                  (0.297774 * size, -0.124298 * size, 0.0355099 * size),
                  (0.297774 * size, -0.124298 * size, -0.0358897 * size),
                  (0.318449 * size, -0.0856182 * size, 0.0355099 * size),
                  (0.318449 * size, -0.0856182 * size, -0.0358897 * size),
                  (0.331181 * size, -0.0436472 * size, 0.0355099 * size),
                  (0.331181 * size, -0.0436472 * size, -0.0358897 * size),
                  (0.335479 * size, -2.16326e-07 * size, 0.0355099 * size),
                  (0.335479 * size, -2.09694e-07 * size, -0.0358897 * size),
                  (0.331181 * size, 0.0436478 * size, 0.0355099 * size),
                  (0.331181 * size, 0.0436478 * size, -0.0358897 * size),
                  (0.318449 * size, 0.0856188 * size, 0.0355099 * size),
                  (0.318449 * size, 0.0856188 * size, -0.0358897 * size),
                  (0.297774 * size, 0.124299 * size, 0.0355099 * size),
                  (0.297774 * size, 0.124299 * size, -0.0358897 * size),
                  (0.26995 * size, 0.158202 * size, 0.0355099 * size),
                  (0.26995 * size, 0.158202 * size, -0.0358897 * size),
                  (0.167578 * size, 0.206701 * size, -0.0358897 * size),
                  (0.236046 * size, 0.186026 * size, -0.0358897 * size),
                  (0.236046 * size, 0.186026 * size, -0.0926162 * size),
                  (0.167578 * size, 0.206701 * size, -0.0926162 * size),
                  (0.236046 * size, 0.186026 * size, 0.0355099 * size),
                  (0.167578 * size, 0.206701 * size, 0.0355099 * size),
                  (-0.178412 * size, -0.2067 * size, 0.0355099 * size),
                  (-0.236047 * size, -0.186025 * size, 0.0355099 * size),
                  (-0.236047 * size, -0.186025 * size, 0.0950732 * size),
                  (-0.178412 * size, -0.2067 * size, 0.0950732 * size),
                  (-0.178412 * size, -0.2067 * size, -0.0358897 * size),
                  (-0.236047 * size, -0.186025 * size, -0.0358897 * size),
                  (-0.26995 * size, -0.158202 * size, 0.0355099 * size),
                  (-0.26995 * size, -0.158202 * size, -0.0358897 * size),
                  (-0.297774 * size, -0.124298 * size, 0.0355099 * size),
                  (-0.297774 * size, -0.124298 * size, -0.0358897 * size),
                  (-0.318449 * size, -0.0856182 * size, 0.0355099 * size),
                  (-0.318449 * size, -0.0856182 * size, -0.0358897 * size),
                  (-0.331181 * size, -0.0436472 * size, 0.0355099 * size),
                  (-0.331181 * size, -0.0436472 * size, -0.0358897 * size),
                  (-0.335479 * size, -2.16326e-07 * size, 0.0355099 * size),
                  (-0.335479 * size, -2.09694e-07 * size, -0.0358897 * size),
                  (-0.331181 * size, 0.0436478 * size, 0.0355099 * size),
                  (-0.331181 * size, 0.0436478 * size, -0.0358897 * size),
                  (-0.318449 * size, 0.0856188 * size, 0.0355099 * size),
                  (-0.318449 * size, 0.0856188 * size, -0.0358897 * size),
                  (-0.297774 * size, 0.124299 * size, 0.0355099 * size),
                  (-0.297774 * size, 0.124299 * size, -0.0358897 * size),
                  (-0.26995 * size, 0.158202 * size, 0.0355099 * size),
                  (-0.26995 * size, 0.158202 * size, -0.0358897 * size),
                  (-0.167578 * size, 0.206701 * size, -0.0358897 * size),
                  (-0.236046 * size, 0.186026 * size, -0.0358897 * size),
                  (-0.236046 * size, 0.186026 * size, -0.0926162 * size),
                  (-0.167578 * size, 0.206701 * size, -0.0926162 * size),
                  (-0.236046 * size, 0.186026 * size, 0.0355099 * size),
                  (-0.167578 * size, 0.206701 * size, 0.0355099 * size),
                  ]
    edges = [(0, 3), (1, 2), (2, 3), (0, 4), (4, 5), (1, 6), (5, 7), (6, 8), (7, 9), (8, 10),
                  (9, 11), (10, 12), (11, 13), (12, 14), (13, 15), (14, 16), (15, 17), (16, 18), (17, 19), (18, 20),
                  (19, 21), (20, 22), (21, 23), (24, 27), (25, 26), (26, 27), (22, 28), (23, 25), (24, 29),
                  (28, 29),
                  (30, 33), (31, 32), (32, 33), (30, 34), (34, 35), (31, 36), (35, 37), (36, 38), (37, 39),
                  (38, 40),
                  (39, 41), (40, 42), (41, 43), (42, 44), (43, 45), (44, 46), (45, 47), (46, 48), (47, 49),
                  (48, 50),
                  (49, 51), (50, 52), (51, 53), (54, 57), (55, 56), (56, 57), (52, 58), (53, 55), (54, 59),
                  (58, 59),
                  ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_Square_widget(name, size):
    verts = [(-1 * size, -1 * size, 0 * size), (1 * size, -1 * size, 0 * size),
                  (-1 * size, 1 * size, 0 * size), (1 * size, 1 * size, 0 * size),
                  ]
    edges = [(2, 0), (0, 1), (1, 3), (3, 2), ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_FilledCube_widget(name, size):
    verts = [(-0.22874 * size, -0.22874 * size, -0.22874 * size),
                  (-0.22874 * size, -0.22874 * size, 0.22874 * size),
                  (-0.22874 * size, 0.22874 * size, -0.22874 * size),
                  (-0.22874 * size, 0.22874 * size, 0.22874 * size),
                  (0.22874 * size, -0.22874 * size, -0.22874 * size),
                  (0.22874 * size, -0.22874 * size, 0.22874 * size),
                  (0.22874 * size, 0.22874 * size, -0.22874 * size),
                  (0.22874 * size, 0.22874 * size, 0.22874 * size),
                  ]
    edges = [(2, 0), (0, 1), (1, 3), (3, 2), (6, 2), (3, 7), (7, 6), (4, 6), (7, 5), (5, 4),
                  (0, 4), (5, 1), ]
    faces = [(0, 1, 3, 2,), (2, 3, 7, 6,), (6, 7, 5, 4,), (4, 5, 1, 0,), (2, 6, 4, 0,),
                  (7, 3, 1, 5,), ]
    createShapeWidget(name, verts, edges, faces)

def create_Cube_widget(name, size):
    verts = [(-0.22874 * size, -0.22874 * size, -0.22874 * size),
                  (-0.22874 * size, -0.22874 * size, 0.22874 * size),
                  (-0.22874 * size, 0.22874 * size, -0.22874 * size),
                  (-0.22874 * size, 0.22874 * size, 0.22874 * size),
                  (0.22874 * size, -0.22874 * size, -0.22874 * size),
                  (0.22874 * size, -0.22874 * size, 0.22874 * size),
                  (0.22874 * size, 0.22874 * size, -0.22874 * size),
                  (0.22874 * size, 0.22874 * size, 0.22874 * size),
                  ]
    edges = [(2, 0), (0, 1), (1, 3), (3, 2), (6, 2), (3, 7), (7, 6), (4, 6), (7, 5), (5, 4),
                  (0, 4), (5, 1), ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_compass_widget(name, size):
    verts = [(0 * size, 0.398682 * size, 0 * size), (0.0648158 * size, 0.325851 * size, 0 * size),
                  (0.127141 * size, 0.306945 * size, 0 * size), (0.18458 * size, 0.276243 * size, 0 * size),
                  (0.234926 * size, 0.234926 * size, 0 * size), (0.276243 * size, 0.18458 * size, 0 * size),
                  (0.306945 * size, 0.127141 * size, 0 * size), (0.325851 * size, 0.0648158 * size, 0 * size),
                  (0.398682 * size, 2.5083e-08 * size, 0 * size), (0.325851 * size, -0.0648158 * size, 0 * size),
                  (0.306945 * size, -0.127141 * size, 0 * size), (0.276243 * size, -0.18458 * size, 0 * size),
                  (0.234926 * size, -0.234926 * size, 0 * size), (0.18458 * size, -0.276243 * size, 0 * size),
                  (0.127141 * size, -0.306945 * size, 0 * size), (0.0648157 * size, -0.325851 * size, 0 * size),
                  (-1.08256e-07 * size, -0.431905 * size, 0 * size),
                  (-0.0648159 * size, -0.325851 * size, 0 * size),
                  (-0.127141 * size, -0.306945 * size, 0 * size), (-0.18458 * size, -0.276243 * size, 0 * size),
                  (-0.234926 * size, -0.234925 * size, 0 * size), (-0.276243 * size, -0.18458 * size, 0 * size),
                  (-0.306945 * size, -0.127141 * size, 0 * size), (-0.325851 * size, -0.0648155 * size, 0 * size),
                  (-0.398682 * size, 3.20806e-07 * size, 0 * size), (-0.325851 * size, 0.0648161 * size, 0 * size),
                  (-0.306945 * size, 0.127141 * size, 0 * size), (-0.276243 * size, 0.18458 * size, 0 * size),
                  (-0.234925 * size, 0.234926 * size, 0 * size), (-0.184579 * size, 0.276243 * size, 0 * size),
                  (-0.12714 * size, 0.306945 * size, 0 * size), (-0.0648153 * size, 0.325851 * size, 0 * size),
                  ]
    edges = [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10),
                  (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 18), (18, 19),
                  (19, 20),
                  (20, 21), (21, 22), (22, 23), (23, 24), (24, 25), (25, 26), (26, 27), (27, 28), (28, 29),
                  (29, 30),
                  (30, 31), (0, 31), ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_Circle_widget(name, size):
    verts = [(0 * size, -1.62921e-07 * size, -1 * size),
                  (-0.19509 * size, -1.5979e-07 * size, -0.980785 * size),
                  (-0.382683 * size, -1.50519e-07 * size, -0.92388 * size),
                  (-0.55557 * size, -1.35464e-07 * size, -0.83147 * size),
                  (-0.707107 * size, -1.15202e-07 * size, -0.707107 * size),
                  (-0.83147 * size, -9.05138e-08 * size, -0.55557 * size),
                  (-0.92388 * size, -6.2347e-08 * size, -0.382683 * size),
                  (-0.980785 * size, -3.17842e-08 * size, -0.19509 * size),
                  (-1 * size, -1.23002e-14 * size, -7.54979e-08 * size),
                  (-0.980785 * size, 3.17842e-08 * size, 0.19509 * size),
                  (-0.92388 * size, 6.2347e-08 * size, 0.382683 * size),
                  (-0.83147 * size, 9.05138e-08 * size, 0.55557 * size),
                  (-0.707107 * size, 1.15202e-07 * size, 0.707107 * size),
                  (-0.55557 * size, 1.35464e-07 * size, 0.83147 * size),
                  (-0.382683 * size, 1.50519e-07 * size, 0.92388 * size),
                  (-0.19509 * size, 1.5979e-07 * size, 0.980785 * size),
                  (3.25841e-07 * size, 1.62921e-07 * size, 1 * size),
                  (0.195091 * size, 1.5979e-07 * size, 0.980785 * size),
                  (0.382684 * size, 1.50519e-07 * size, 0.923879 * size),
                  (0.555571 * size, 1.35463e-07 * size, 0.831469 * size),
                  (0.707107 * size, 1.15202e-07 * size, 0.707106 * size),
                  (0.83147 * size, 9.05138e-08 * size, 0.55557 * size),
                  (0.92388 * size, 6.2347e-08 * size, 0.382683 * size),
                  (0.980785 * size, 3.1784e-08 * size, 0.195089 * size),
                  (1 * size, -1.57316e-13 * size, -9.65599e-07 * size),
                  (0.980785 * size, -3.17844e-08 * size, -0.195091 * size),
                  (0.923879 * size, -6.23471e-08 * size, -0.382684 * size),
                  (0.831469 * size, -9.0514e-08 * size, -0.555571 * size),
                  (0.707106 * size, -1.15203e-07 * size, -0.707108 * size),
                  (0.555569 * size, -1.35464e-07 * size, -0.83147 * size),
                  (0.382682 * size, -1.50519e-07 * size, -0.92388 * size),
                  (0.195089 * size, -1.5979e-07 * size, -0.980786 * size),
                  ]
    edges = [(1, 0), (2, 1), (3, 2), (4, 3), (5, 4), (6, 5), (7, 6), (8, 7), (9, 8), (10, 9),
                  (11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15), (17, 16), (18, 17), (19, 18),
                  (20, 19),
                  (21, 20), (22, 21), (23, 22), (24, 23), (25, 24), (26, 25), (27, 26), (28, 27), (29, 28),
                  (30, 29),
                  (31, 30), (0, 31), ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_DiamondWireframe_widget(name, size):
    verts = [(0 * size, 1.28626 * size, 2.09558e-07 * size), (0 * size, -3.29529e-07 * size, 2.02264 * size),
                  (1.28626 * size, 0 * size, 0 * size), (0 * size, -1.28626 * size, -2.09558e-07 * size),
                  (-1.28626 * size, 0 * size, 0 * size), (0 * size, 3.29529e-07 * size, -2.02264 * size),
                  ]
    edges = [(0, 2), (0, 1), (1, 2), (2, 3), (1, 3), (3, 4), (1, 4), (0, 4), (0, 5), (2, 5),
                  (3, 5), (4, 5), ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_Diamond_widget(name, size):
    verts = [(0 * size, 1.28626 * size, 2.09558e-07 * size), (0 * size, -3.29529e-07 * size, 2.02264 * size),
                  (1.28626 * size, 0 * size, 0 * size), (0 * size, -1.28626 * size, -2.09558e-07 * size),
                  (-1.28626 * size, 0 * size, 0 * size), (0 * size, 3.29529e-07 * size, -2.02264 * size),
                  ]
    edges = [(0, 2), (0, 1), (1, 2), (2, 3), (1, 3), (3, 4), (1, 4), (0, 4), (0, 5), (2, 5),
                  (3, 5), (4, 5), ]
    faces = [(0, 1, 2,), (2, 1, 3,), (3, 1, 4,), (4, 1, 0,), (0, 2, 5,), (2, 3, 5,), (3, 4, 5,),
                  (4, 0, 5,), ]
    createShapeWidget(name, verts, edges, faces)

def create_FilledSphere_widget(name, size):
    verts = [(0 * size, -0.157869 * size, 0.157869 * size), (0 * size, -0.111631 * size, 0.19335 * size),
                  (0 * size, -0.0577842 * size, 0.215654 * size), (0 * size, -2.66148e-08 * size, 0.223261 * size),
                  (0 * size, 0.0577842 * size, 0.215654 * size), (0 * size, 0.111631 * size, 0.19335 * size),
                  (0 * size, 0.157869 * size, 0.157869 * size), (0 * size, 0.19335 * size, 0.111631 * size),
                  (0 * size, 0.215654 * size, 0.0577843 * size),
                  (0.022113 * size, -0.215654 * size, 0.0533857 * size),
                  (0.0427191 * size, -0.19335 * size, 0.103133 * size),
                  (0.060414 * size, -0.157869 * size, 0.145852 * size),
                  (0.0739917 * size, -0.111631 * size, 0.178632 * size),
                  (0.0825271 * size, -0.0577842 * size, 0.199238 * size),
                  (0.0854383 * size, -2.58719e-08 * size, 0.206266 * size),
                  (0.0825271 * size, 0.0577842 * size, 0.199238 * size),
                  (0.0739917 * size, 0.111631 * size, 0.178632 * size),
                  (0.060414 * size, 0.157869 * size, 0.145852 * size),
                  (0.0427192 * size, 0.19335 * size, 0.103133 * size),
                  (0.0221131 * size, 0.215654 * size, 0.0533857 * size),
                  (-6.14766e-08 * size, -0.223261 * size, 1.57054e-08 * size),
                  (0.0408596 * size, -0.215654 * size, 0.0408596 * size),
                  (0.0789347 * size, -0.19335 * size, 0.0789347 * size),
                  (0.11163 * size, -0.157869 * size, 0.111631 * size),
                  (0.136719 * size, -0.111631 * size, 0.136719 * size),
                  (0.15249 * size, -0.0577842 * size, 0.15249 * size),
                  (0.157869 * size, -2.37564e-08 * size, 0.157869 * size),
                  (0.15249 * size, 0.0577842 * size, 0.15249 * size),
                  (0.136719 * size, 0.111631 * size, 0.136719 * size),
                  (0.111631 * size, 0.157869 * size, 0.111631 * size),
                  (0.0789347 * size, 0.19335 * size, 0.0789348 * size),
                  (0.0408596 * size, 0.215654 * size, 0.0408597 * size),
                  (0.0533856 * size, -0.215654 * size, 0.0221131 * size),
                  (0.103133 * size, -0.19335 * size, 0.0427192 * size),
                  (0.145852 * size, -0.157869 * size, 0.060414 * size),
                  (0.178632 * size, -0.111631 * size, 0.0739918 * size),
                  (0.199238 * size, -0.0577842 * size, 0.0825271 * size),
                  (0.206266 * size, -2.05904e-08 * size, 0.0854383 * size),
                  (0.199238 * size, 0.0577842 * size, 0.0825271 * size),
                  (0.178632 * size, 0.111631 * size, 0.0739918 * size),
                  (0.145852 * size, 0.157869 * size, 0.0604141 * size),
                  (0.103133 * size, 0.19335 * size, 0.0427192 * size),
                  (0.0533856 * size, 0.215654 * size, 0.0221131 * size),
                  (0.0577841 * size, -0.215654 * size, 7.03822e-08 * size),
                  (0.11163 * size, -0.19335 * size, 6.80303e-08 * size),
                  (0.157869 * size, -0.157869 * size, 6.29275e-08 * size),
                  (0.19335 * size, -0.111631 * size, 5.49681e-08 * size),
                  (0.215654 * size, -0.0577842 * size, 4.40144e-08 * size),
                  (0.223261 * size, -1.68557e-08 * size, 5.31939e-08 * size),
                  (0.215654 * size, 0.0577842 * size, 6.23734e-08 * size),
                  (0.19335 * size, 0.111631 * size, 5.80734e-08 * size),
                  (0.157869 * size, 0.157869 * size, 8.00557e-08 * size),
                  (0.111631 * size, 0.19335 * size, 7.49529e-08 * size),
                  (0.0577842 * size, 0.215654 * size, 8.92352e-08 * size),
                  (0.0533856 * size, -0.215654 * size, -0.022113 * size),
                  (0.103133 * size, -0.19335 * size, -0.0427191 * size),
                  (0.145852 * size, -0.157869 * size, -0.0604139 * size),
                  (0.178632 * size, -0.111631 * size, -0.0739917 * size),
                  (0.199238 * size, -0.0577842 * size, -0.082527 * size),
                  (0.206266 * size, -1.31211e-08 * size, -0.0854382 * size),
                  (0.199238 * size, 0.0577842 * size, -0.082527 * size),
                  (0.178632 * size, 0.111631 * size, -0.0739917 * size),
                  (0.145852 * size, 0.157869 * size, -0.0604139 * size),
                  (0.103133 * size, 0.19335 * size, -0.0427191 * size),
                  (0.0533856 * size, 0.215654 * size, -0.022113 * size),
                  (0.0408595 * size, -0.215654 * size, -0.0408595 * size),
                  (0.0789346 * size, -0.19335 * size, -0.0789346 * size),
                  (0.11163 * size, -0.157869 * size, -0.11163 * size),
                  (0.136719 * size, -0.111631 * size, -0.136719 * size),
                  (0.15249 * size, -0.0577842 * size, -0.15249 * size),
                  (0.157869 * size, -9.95506e-09 * size, -0.157869 * size),
                  (0.15249 * size, 0.0577842 * size, -0.15249 * size),
                  (0.136719 * size, 0.111631 * size, -0.136719 * size),
                  (0.11163 * size, 0.157869 * size, -0.11163 * size),
                  (0.0789347 * size, 0.19335 * size, -0.0789346 * size),
                  (0.0408596 * size, 0.215654 * size, -0.0408595 * size),
                  (0.022113 * size, -0.215654 * size, -0.0533855 * size),
                  (0.0427191 * size, -0.19335 * size, -0.103133 * size),
                  (0.0604139 * size, -0.157869 * size, -0.145852 * size),
                  (0.0739917 * size, -0.111631 * size, -0.178632 * size),
                  (0.0825269 * size, -0.0577842 * size, -0.199238 * size),
                  (0.0854382 * size, -7.83956e-09 * size, -0.206266 * size),
                  (0.082527 * size, 0.0577842 * size, -0.199238 * size),
                  (0.0739916 * size, 0.111631 * size, -0.178632 * size),
                  (0.0604139 * size, 0.157869 * size, -0.145852 * size),
                  (0.0427191 * size, 0.19335 * size, -0.103133 * size),
                  (0.022113 * size, 0.215654 * size, -0.0533855 * size),
                  (-1.49732e-08 * size, -0.215654 * size, -0.0577841 * size),
                  (-3.32709e-08 * size, -0.19335 * size, -0.11163 * size),
                  (-4.32515e-08 * size, -0.157869 * size, -0.157869 * size),
                  (-6.65394e-08 * size, -0.111631 * size, -0.19335 * size),
                  (-9.98079e-08 * size, -0.0577842 * size, -0.215653 * size),
                  (-7.98468e-08 * size, -7.0967e-09 * size, -0.223261 * size),
                  (-7.31931e-08 * size, 0.0577842 * size, -0.215653 * size),
                  (-8.65005e-08 * size, 0.111631 * size, -0.19335 * size),
                  (-4.65783e-08 * size, 0.157869 * size, -0.157869 * size),
                  (-3.32709e-08 * size, 0.19335 * size, -0.11163 * size),
                  (-1.16464e-08 * size, 0.215654 * size, -0.0577841 * size),
                  (0 * size, 0.223261 * size, 9.67001e-08 * size),
                  (-0.022113 * size, -0.215654 * size, -0.0533855 * size),
                  (-0.0427192 * size, -0.19335 * size, -0.103133 * size),
                  (-0.060414 * size, -0.157869 * size, -0.145852 * size),
                  (-0.0739918 * size, -0.111631 * size, -0.178632 * size),
                  (-0.0825271 * size, -0.0577842 * size, -0.199238 * size),
                  (-0.0854383 * size, -7.83957e-09 * size, -0.206266 * size),
                  (-0.0825271 * size, 0.0577842 * size, -0.199238 * size),
                  (-0.0739918 * size, 0.111631 * size, -0.178632 * size),
                  (-0.060414 * size, 0.157869 * size, -0.145852 * size),
                  (-0.0427192 * size, 0.19335 * size, -0.103133 * size),
                  (-0.0221131 * size, 0.215654 * size, -0.0533855 * size),
                  (-0.0408596 * size, -0.215654 * size, -0.0408595 * size),
                  (-0.0789347 * size, -0.19335 * size, -0.0789345 * size),
                  (-0.11163 * size, -0.157869 * size, -0.11163 * size),
                  (-0.136719 * size, -0.111631 * size, -0.136719 * size),
                  (-0.15249 * size, -0.0577842 * size, -0.15249 * size),
                  (-0.157869 * size, -9.95506e-09 * size, -0.157869 * size),
                  (-0.15249 * size, 0.0577842 * size, -0.15249 * size),
                  (-0.136719 * size, 0.111631 * size, -0.136719 * size),
                  (-0.111631 * size, 0.157869 * size, -0.11163 * size),
                  (-0.0789347 * size, 0.19335 * size, -0.0789346 * size),
                  (-0.0408596 * size, 0.215654 * size, -0.0408595 * size),
                  (-0.0533856 * size, -0.215654 * size, -0.0221129 * size),
                  (-0.103133 * size, -0.19335 * size, -0.042719 * size),
                  (-0.145852 * size, -0.157869 * size, -0.0604138 * size),
                  (-0.178632 * size, -0.111631 * size, -0.0739916 * size),
                  (-0.199238 * size, -0.0577842 * size, -0.0825268 * size),
                  (-0.206266 * size, -1.31211e-08 * size, -0.0854381 * size),
                  (-0.199238 * size, 0.0577842 * size, -0.0825269 * size),
                  (-0.178632 * size, 0.111631 * size, -0.0739915 * size),
                  (-0.145852 * size, 0.157869 * size, -0.0604138 * size),
                  (-0.103133 * size, 0.19335 * size, -0.042719 * size),
                  (-0.0533856 * size, 0.215654 * size, -0.0221129 * size),
                  (-0.0577841 * size, -0.215654 * size, 9.86604e-08 * size),
                  (-0.11163 * size, -0.19335 * size, 1.24587e-07 * size),
                  (-0.157869 * size, -0.157869 * size, 1.49426e-07 * size),
                  (-0.19335 * size, -0.111631 * size, 1.74735e-07 * size),
                  (-0.215654 * size, -0.0577842 * size, 2.10357e-07 * size),
                  (-0.223261 * size, -1.68558e-08 * size, 1.99575e-07 * size),
                  (-0.215654 * size, 0.0577842 * size, 1.95447e-07 * size),
                  (-0.19335 * size, 0.111631 * size, 1.97801e-07 * size),
                  (-0.157869 * size, 0.157869 * size, 1.56573e-07 * size),
                  (-0.11163 * size, 0.19335 * size, 1.4149e-07 * size),
                  (-0.0577842 * size, 0.215654 * size, 1.14187e-07 * size),
                  (-0.0533856 * size, -0.215654 * size, 0.0221131 * size),
                  (-0.103133 * size, -0.19335 * size, 0.0427193 * size),
                  (-0.145852 * size, -0.157869 * size, 0.0604141 * size),
                  (-0.178632 * size, -0.111631 * size, 0.0739919 * size),
                  (-0.199238 * size, -0.0577842 * size, 0.0825272 * size),
                  (-0.206266 * size, -2.05904e-08 * size, 0.0854385 * size),
                  (-0.199238 * size, 0.0577842 * size, 0.0825272 * size),
                  (-0.178632 * size, 0.111631 * size, 0.0739919 * size),
                  (-0.145852 * size, 0.157869 * size, 0.0604141 * size),
                  (-0.103133 * size, 0.19335 * size, 0.0427193 * size),
                  (-0.0533856 * size, 0.215654 * size, 0.0221132 * size),
                  (-0.0408595 * size, -0.215654 * size, 0.0408596 * size),
                  (-0.0789346 * size, -0.19335 * size, 0.0789348 * size),
                  (-0.11163 * size, -0.157869 * size, 0.111631 * size),
                  (-0.136719 * size, -0.111631 * size, 0.136719 * size),
                  (-0.15249 * size, -0.0577842 * size, 0.15249 * size),
                  (-0.157869 * size, -2.37564e-08 * size, 0.15787 * size),
                  (-0.15249 * size, 0.0577842 * size, 0.15249 * size),
                  (-0.136719 * size, 0.111631 * size, 0.136719 * size),
                  (-0.11163 * size, 0.157869 * size, 0.111631 * size),
                  (-0.0789346 * size, 0.19335 * size, 0.0789348 * size),
                  (-0.0408596 * size, 0.215654 * size, 0.0408597 * size),
                  (-0.022113 * size, -0.215654 * size, 0.0533857 * size),
                  (-0.0427191 * size, -0.19335 * size, 0.103133 * size),
                  (-0.0604139 * size, -0.157869 * size, 0.145852 * size),
                  (-0.0739916 * size, -0.111631 * size, 0.178632 * size),
                  (-0.0825269 * size, -0.0577842 * size, 0.199238 * size),
                  (-0.0854382 * size, -2.58719e-08 * size, 0.206266 * size),
                  (-0.0825269 * size, 0.0577842 * size, 0.199238 * size),
                  (-0.0739916 * size, 0.111631 * size, 0.178632 * size),
                  (-0.0604139 * size, 0.157869 * size, 0.145852 * size),
                  (-0.0427191 * size, 0.19335 * size, 0.103133 * size),
                  (-0.022113 * size, 0.215654 * size, 0.0533857 * size),
                  (2.99392e-08 * size, -0.215654 * size, 0.0577842 * size),
                  (5.98809e-08 * size, -0.19335 * size, 0.111631 * size),
                  ]
    edges = [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (9, 10), (10, 11),
                  (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 18), (18, 19), (14, 3), (2, 13),
                  (11, 0), (18, 7), (6, 17), (15, 4), (12, 1), (19, 8), (16, 5), (20, 21), (21, 22), (22, 23),
                  (23, 24), (24, 25), (25, 26), (26, 27), (27, 28), (28, 29), (29, 30), (30, 31), (31, 19),
                  (18, 30),
                  (21, 9), (28, 16), (15, 27), (25, 13), (12, 24), (22, 10), (29, 17), (26, 14), (23, 11), (32, 33),
                  (33, 34), (34, 35), (35, 36), (36, 37), (37, 38), (38, 39), (39, 40), (40, 41), (41, 42),
                  (34, 23),
                  (22, 33), (41, 30), (29, 40), (38, 27), (26, 37), (35, 24), (42, 31), (32, 21), (39, 28),
                  (36, 25),
                  (43, 44), (44, 45), (45, 46), (46, 47), (47, 48), (48, 49), (49, 50), (50, 51), (51, 52),
                  (52, 53),
                  (42, 53), (44, 33), (32, 43), (51, 40), (39, 50), (48, 37), (36, 47), (45, 34), (52, 41),
                  (49, 38),
                  (46, 35), (54, 55), (55, 56), (56, 57), (57, 58), (58, 59), (59, 60), (60, 61), (61, 62),
                  (62, 63),
                  (63, 64), (57, 46), (45, 56), (64, 53), (52, 63), (54, 43), (61, 50), (49, 60), (58, 47),
                  (55, 44),
                  (62, 51), (59, 48), (65, 66), (66, 67), (67, 68), (68, 69), (69, 70), (70, 71), (71, 72),
                  (72, 73),
                  (73, 74), (74, 75), (67, 56), (55, 66), (74, 63), (62, 73), (71, 60), (59, 70), (68, 57),
                  (75, 64),
                  (65, 54), (72, 61), (69, 58), (76, 77), (77, 78), (78, 79), (79, 80), (80, 81), (81, 82),
                  (82, 83),
                  (83, 84), (84, 85), (85, 86), (80, 69), (68, 79), (75, 86), (77, 66), (65, 76), (84, 73),
                  (72, 83),
                  (81, 70), (78, 67), (85, 74), (82, 71), (87, 88), (88, 89), (89, 90), (90, 91), (91, 92),
                  (92, 93),
                  (93, 94), (94, 95), (95, 96), (96, 97), (97, 98), (90, 79), (78, 89), (97, 86), (85, 96),
                  (87, 76),
                  (94, 83), (82, 93), (91, 80), (88, 77), (95, 84), (92, 81), (99, 100), (100, 101), (101, 102),
                  (102, 103),
                  (103, 104), (104, 105), (105, 106), (106, 107), (107, 108), (108, 109), (104, 92), (91, 103),
                  (101, 89),
                  (88, 100),
                  (108, 96), (95, 107), (105, 93), (102, 90), (109, 97), (99, 87), (106, 94), (110, 111),
                  (111, 112),
                  (112, 113),
                  (113, 114), (114, 115), (115, 116), (116, 117), (117, 118), (118, 119), (119, 120), (114, 103),
                  (102, 113),
                  (109, 120),
                  (111, 100), (99, 110), (118, 107), (106, 117), (115, 104), (112, 101), (119, 108), (116, 105),
                  (121, 122),
                  (122, 123),
                  (123, 124), (124, 125), (125, 126), (126, 127), (127, 128), (128, 129), (129, 130), (130, 131),
                  (127, 116),
                  (115, 126),
                  (124, 113), (112, 123), (131, 120), (119, 130), (121, 110), (128, 117), (125, 114), (122, 111),
                  (129, 118),
                  (132, 133),
                  (133, 134), (134, 135), (135, 136), (136, 137), (137, 138), (138, 139), (139, 140), (140, 141),
                  (141, 142),
                  (137, 126),
                  (125, 136), (134, 123), (122, 133), (141, 130), (129, 140), (138, 127), (135, 124), (142, 131),
                  (132, 121),
                  (139, 128),
                  (143, 144), (144, 145), (145, 146), (146, 147), (147, 148), (148, 149), (149, 150), (150, 151),
                  (151, 152),
                  (152, 153),
                  (150, 139), (138, 149), (147, 136), (135, 146), (142, 153), (144, 133), (132, 143), (151, 140),
                  (148, 137),
                  (145, 134),
                  (152, 141), (154, 155), (155, 156), (156, 157), (157, 158), (158, 159), (159, 160), (160, 161),
                  (161, 162),
                  (162, 163),
                  (163, 164), (160, 149), (148, 159), (157, 146), (145, 156), (164, 153), (152, 163), (154, 143),
                  (161, 150),
                  (158, 147),
                  (155, 144), (162, 151), (165, 166), (166, 167), (167, 168), (168, 169), (169, 170), (170, 171),
                  (171, 172),
                  (172, 173),
                  (173, 174), (174, 175), (173, 162), (161, 172), (170, 159), (158, 169), (167, 156), (155, 166),
                  (174, 163),
                  (171, 160),
                  (168, 157), (175, 164), (165, 154), (176, 177), (176, 165), (177, 166), (20, 176), (177, 0),
                  (8, 98),
                  (20, 9),
                  (19, 98), (177, 10), (9, 176), (31, 98), (20, 32), (42, 98), (20, 43), (53, 98), (20, 54),
                  (64, 98),
                  (20, 65), (75, 98), (20, 76), (86, 98), (20, 87), (20, 99), (109, 98), (20, 110), (120, 98),
                  (20, 121),
                  (131, 98), (20, 132), (142, 98), (20, 143), (153, 98), (20, 154), (164, 98), (20, 165), (175, 98),
                  (5, 172),
                  (171, 4), (2, 169), (168, 1), (175, 8), (6, 173), (3, 170), (0, 167), (7, 174), ]
    faces = [(3, 2, 13, 14,), (0, 177, 10, 11,), (7, 6, 17, 18,), (4, 3, 14, 15,), (1, 0, 11, 12,),
                  (8, 7, 18, 19,),
                  (176, 20, 9,), (5, 4, 15, 16,), (2, 1, 12, 13,), (98, 8, 19,),
                  (177, 176, 9, 10,), (6, 5, 16, 17,), (19, 18, 30, 31,), (9, 20, 21,), (16, 15, 27, 28,),
                  (13, 12, 24, 25,),
                  (98, 19, 31,), (10, 9, 21, 22,), (17, 16, 28, 29,), (14, 13, 25, 26,),
                  (11, 10, 22, 23,), (18, 17, 29, 30,), (15, 14, 26, 27,), (12, 11, 23, 24,), (23, 22, 33, 34,),
                  (30, 29, 40, 41,), (27, 26, 37, 38,), (24, 23, 34, 35,), (31, 30, 41, 42,), (21, 20, 32,),
                  (28, 27, 38, 39,), (25, 24, 35, 36,), (98, 31, 42,), (22, 21, 32, 33,), (29, 28, 39, 40,),
                  (26, 25, 36, 37,), (98, 42, 53,), (33, 32, 43, 44,), (40, 39, 50, 51,), (37, 36, 47, 48,),
                  (34, 33, 44, 45,), (41, 40, 51, 52,), (38, 37, 48, 49,), (35, 34, 45, 46,), (42, 41, 52, 53,),
                  (32, 20, 43,), (39, 38, 49, 50,), (36, 35, 46, 47,), (46, 45, 56, 57,), (53, 52, 63, 64,),
                  (43, 20, 54,), (50, 49, 60, 61,), (47, 46, 57, 58,), (98, 53, 64,), (44, 43, 54, 55,),
                  (51, 50, 61, 62,),
                  (48, 47, 58, 59,), (45, 44, 55, 56,), (52, 51, 62, 63,), (49, 48, 59, 60,),
                  (56, 55, 66, 67,), (63, 62, 73, 74,), (60, 59, 70, 71,), (57, 56, 67, 68,), (64, 63, 74, 75,),
                  (54, 20, 65,), (61, 60, 71, 72,), (58, 57, 68, 69,), (98, 64, 75,), (55, 54, 65, 66,),
                  (62, 61, 72, 73,), (59, 58, 69, 70,), (69, 68, 79, 80,), (98, 75, 86,), (66, 65, 76, 77,),
                  (73, 72, 83, 84,), (70, 69, 80, 81,), (67, 66, 77, 78,), (74, 73, 84, 85,), (71, 70, 81, 82,),
                  (68, 67, 78, 79,), (75, 74, 85, 86,), (65, 20, 76,), (72, 71, 82, 83,), (79, 78, 89, 90,),
                  (86, 85, 96, 97,), (76, 20, 87,), (83, 82, 93, 94,), (80, 79, 90, 91,), (98, 86, 97,),
                  (77, 76, 87, 88,), (84, 83, 94, 95,), (81, 80, 91, 92,), (78, 77, 88, 89,), (85, 84, 95, 96,),
                  (82, 81, 92, 93,), (92, 91, 103, 104,), (89, 88, 100, 101,), (96, 95, 107, 108,),
                  (93, 92, 104, 105,),
                  (90, 89, 101, 102,), (97, 96, 108, 109,), (87, 20, 99,), (94, 93, 105, 106,), (91, 90, 102, 103,),
                  (98, 97, 109,), (88, 87, 99, 100,), (95, 94, 106, 107,), (103, 102, 113, 114,), (98, 109, 120,),
                  (100, 99, 110, 111,), (107, 106, 117, 118,), (104, 103, 114, 115,), (101, 100, 111, 112,),
                  (108, 107, 118, 119,), (105, 104, 115, 116,), (102, 101, 112, 113,), (109, 108, 119, 120,),
                  (99, 20, 110,),
                  (106, 105, 116, 117,),
                  (116, 115, 126, 127,), (113, 112, 123, 124,), (120, 119, 130, 131,), (110, 20, 121,),
                  (117, 116, 127, 128,), (114, 113, 124, 125,), (98, 120, 131,), (111, 110, 121, 122,),
                  (118, 117, 128, 129,), (115, 114, 125, 126,),
                  (112, 111, 122, 123,), (119, 118, 129, 130,), (126, 125, 136, 137,), (123, 122, 133, 134,),
                  (130, 129, 140, 141,), (127, 126, 137, 138,), (124, 123, 134, 135,), (131, 130, 141, 142,),
                  (121, 20, 132,), (128, 127, 138, 139,),
                  (125, 124, 135, 136,), (98, 131, 142,), (122, 121, 132, 133,), (129, 128, 139, 140,),
                  (139, 138, 149, 150,), (136, 135, 146, 147,), (98, 142, 153,), (133, 132, 143, 144,),
                  (140, 139, 150, 151,), (137, 136, 147, 148,),
                  (134, 133, 144, 145,), (141, 140, 151, 152,), (138, 137, 148, 149,), (135, 134, 145, 146,),
                  (142, 141, 152, 153,), (132, 20, 143,), (149, 148, 159, 160,), (146, 145, 156, 157,),
                  (153, 152, 163, 164,), (143, 20, 154,),
                  (150, 149, 160, 161,), (147, 146, 157, 158,), (98, 153, 164,), (144, 143, 154, 155,),
                  (151, 150, 161, 162,), (148, 147, 158, 159,), (145, 144, 155, 156,), (152, 151, 162, 163,),
                  (162, 161, 172, 173,), (159, 158, 169, 170,),
                  (156, 155, 166, 167,), (163, 162, 173, 174,), (160, 159, 170, 171,), (157, 156, 167, 168,),
                  (164, 163, 174, 175,), (154, 20, 165,), (161, 160, 171, 172,), (158, 157, 168, 169,),
                  (98, 164, 175,),
                  (155, 154, 165, 166,),
                  (165, 20, 176,), (172, 171, 4, 5,), (169, 168, 1, 2,), (98, 175, 8,), (166, 165, 176, 177,),
                  (173, 172, 5, 6,), (170, 169, 2, 3,), (167, 166, 177, 0,), (174, 173, 6, 7,), (171, 170, 3, 4,),
                  (168, 167, 0, 1,),
                  (175, 174, 7, 8,), ]
    createShapeWidget(name, verts, edges, faces)

def create_ArmFK_widget(name, size):
    verts = [(0.148194 * size, 0.681884 * size, 0.141538 * size),
                  (0.175601 * size, -0.526016 * size, 0.141538 * size),
                  (0.28185 * size, -0.556826 * size, 0.0732302 * size),
                  (0.223968 * size, 0.638309 * size, 0.0732304 * size),
                  (-0.18579 * size, 0.621861 * size, 0.0732304 * size),
                  (-0.28642 * size, -0.580957 * size, 0.0732302 * size),
                  (-0.142654 * size, -0.537988 * size, 0.141538 * size),
                  (-0.0806125 * size, 0.66864 * size, 0.141538 * size),
                  (0.0206168 * size, -0.514843 * size, 0.173771 * size),
                  (0.0481696 * size, 0.712578 * size, 0.173771 * size),
                  ]
    edges = [(0, 3), (1, 2), (2, 3), (4, 7), (4, 5), (5, 6), (7, 9), (6, 8), (0, 9), (1, 8),
                  ]
    faces = []
    createShapeWidget(name,verts, edges, faces)

def create_hand_widget( name, size):
    verts = [(-0.0482717 * size, -3.95375e-08 * size, 0.242679 * size),
                  (-1.30566e-08 * size, -4.0312e-08 * size, 0.247433 * size),
                  (-0.0946889 * size, -3.72434e-08 * size, 0.228599 * size),
                  (-0.137467 * size, -3.35181e-08 * size, 0.205733 * size),
                  (-0.174962 * size, -2.85049e-08 * size, 0.174962 * size),
                  (-0.205734 * size, -2.23962e-08 * size, 0.137467 * size),
                  (-0.228599 * size, -1.54268e-08 * size, 0.0946889 * size),
                  (-0.242679 * size, -7.86446e-09 * size, 0.0482717 * size),
                  (-0.247433 * size, -3.18332e-15 * size, 1.85248e-08 * size),
                  (-0.242679 * size, 7.86445e-09 * size, -0.0482717 * size),
                  (-0.228599 * size, 1.54268e-08 * size, -0.0946889 * size),
                  (-0.205734 * size, 2.23962e-08 * size, -0.137467 * size),
                  (-0.174962 * size, 2.85049e-08 * size, -0.174962 * size),
                  (-0.137467 * size, 3.35183e-08 * size, -0.205734 * size),
                  (-0.0946889 * size, 3.72434e-08 * size, -0.228599 * size),
                  (-0.0482717 * size, 3.95375e-08 * size, -0.242679 * size),
                  (-1.30566e-08 * size, 4.0312e-08 * size, -0.247433 * size),
                  (0.0482717 * size, 3.95375e-08 * size, -0.242679 * size),
                  (0.0946889 * size, 3.72434e-08 * size, -0.228599 * size),
                  (0.137467 * size, 3.35181e-08 * size, -0.205733 * size),
                  (0.174962 * size, 2.85049e-08 * size, -0.174962 * size),
                  (0.205734 * size, 2.23962e-08 * size, -0.137467 * size),
                  (0.228599 * size, 1.54267e-08 * size, -0.0946881 * size),
                  (0.242679 * size, 7.86445e-09 * size, -0.0482717 * size),
                  (0.247433 * size, -3.18332e-15 * size, 1.85248e-08 * size),
                  (0.242679 * size, -7.86458e-09 * size, 0.0482725 * size),
                  (0.228599 * size, -1.54268e-08 * size, 0.0946889 * size),
                  (0.205733 * size, -2.23962e-08 * size, 0.137467 * size),
                  (0.174962 * size, -2.85049e-08 * size, 0.174962 * size),
                  (0.137466 * size, -3.35183e-08 * size, 0.205734 * size),
                  (0.0946881 * size, -3.72434e-08 * size, 0.228599 * size),
                  (0.0482717 * size, -3.95375e-08 * size, 0.242679 * size),
                  (-0.0346059 * size, -2.8344e-08 * size, 0.173974 * size),
                  (-1.30566e-08 * size, -2.88992e-08 * size, 0.177382 * size),
                  (-0.0678813 * size, -2.66994e-08 * size, 0.16388 * size),
                  (-0.0985484 * size, -2.40288e-08 * size, 0.147488 * size),
                  (-0.125429 * size, -2.04349e-08 * size, 0.125429 * size),
                  (-0.147488 * size, -1.60556e-08 * size, 0.0985484 * size),
                  (-0.16388 * size, -1.10593e-08 * size, 0.0678814 * size),
                  (-0.173974 * size, -5.63802e-09 * size, 0.0346059 * size),
                  (-0.177382 * size, -3.18332e-15 * size, 1.85248e-08 * size),
                  (-0.173974 * size, 5.63801e-09 * size, -0.0346059 * size),
                  (-0.16388 * size, 1.10593e-08 * size, -0.0678813 * size),
                  (-0.147488 * size, 1.60556e-08 * size, -0.0985484 * size),
                  (-0.125429 * size, 2.04349e-08 * size, -0.125429 * size),
                  (-0.0985484 * size, 2.40288e-08 * size, -0.147488 * size),
                  (-0.0678813 * size, 2.66994e-08 * size, -0.16388 * size),
                  (-0.0346059 * size, 2.8344e-08 * size, -0.173974 * size),
                  (-1.30566e-08 * size, 2.88992e-08 * size, -0.177382 * size),
                  (0.0346059 * size, 2.8344e-08 * size, -0.173974 * size),
                  (0.0678813 * size, 2.66994e-08 * size, -0.16388 * size),
                  (0.0985484 * size, 2.40288e-08 * size, -0.147488 * size),
                  (0.125429 * size, 2.04349e-08 * size, -0.125429 * size),
                  (0.147488 * size, 1.60556e-08 * size, -0.0985484 * size),
                  (0.16388 * size, 1.10593e-08 * size, -0.0678813 * size),
                  (0.173974 * size, 5.63789e-09 * size, -0.0346051 * size),
                  (0.177382 * size, -3.18332e-15 * size, 1.85248e-08 * size),
                  (0.173974 * size, -5.63802e-09 * size, 0.0346059 * size),
                  (0.16388 * size, -1.10593e-08 * size, 0.0678814 * size),
                  (0.147488 * size, -1.60556e-08 * size, 0.0985484 * size),
                  (0.125429 * size, -2.04349e-08 * size, 0.125429 * size),
                  (0.0985484 * size, -2.4029e-08 * size, 0.147489 * size),
                  (0.0678813 * size, -2.66995e-08 * size, 0.16388 * size),
                  (0.0346051 * size, -2.8344e-08 * size, 0.173974 * size),
                  ]
    edges = [(57, 25), (43, 11), (56, 24), (42, 10), (55, 23), (41, 9), (54, 22), (40, 8), (53, 21), (39, 7),
                  (52, 20), (38, 6), (51, 19), (37, 5), (50, 18), (63, 31), (36, 4), (49, 17), (62, 30), (35, 3),
                  (48, 16), (61, 29), (34, 2), (47, 15), (60, 28), (32, 0), (1, 33), (46, 14), (59, 27), (26, 58),
                  (45, 13), (12, 44), (33, 63), (63, 62), (62, 61), (61, 60), (60, 59), (59, 58), (58, 57),
                  (57, 56),
                  (56, 55), (55, 54), (54, 53), (53, 52), (52, 51), (51, 50), (50, 49), (49, 48), (48, 47),
                  (47, 46),
                  (46, 45), (45, 44), (44, 43), (43, 42), (42, 41), (41, 40), (40, 39), (39, 38), (38, 37),
                  (37, 36),
                  (36, 35), (35, 34), (34, 32), (32, 33), (1, 31), (31, 30), (30, 29), (29, 28), (28, 27), (27, 26),
                  (26, 25), (25, 24), (24, 23), (23, 22), (22, 21), (21, 20), (20, 19), (19, 18), (18, 17),
                  (17, 16),
                  (16, 15), (15, 14), (14, 13), (13, 12), (12, 11), (11, 10), (10, 9), (9, 8), (8, 7), (7, 6),
                  (6, 5), (5, 4), (4, 3), (3, 2), (2, 0), (0, 1), ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_FingerFK_widget(name, size):
    verts = [(-0.227218 * size, 0.340692 * size, -0.0403409 * size),
                  (-0.225591 * size, -0.203499 * size, -0.04034 * size),
                  (-0.105767 * size, -0.298155 * size, -4.85756e-08 * size),
                  (-0.128072 * size, 0.248953 * size, 4.05596e-08 * size),
                  (0.009536 * size, -0.341221 * size, 0.0183759 * size),
                  (0.12362 * size, -0.307986 * size, -5.01773e-08 * size),
                  (0.134755 * size, 0.259555 * size, 4.22869e-08 * size),
                  (0.002304 * size, 0.222094 * size, 0.018376 * size),
                  (0.240483 * size, 0.339208 * size, -0.0403399 * size),
                  (0.239833 * size, -0.211056 * size, -0.040341 * size),
                  (0.340416 * size, -0.071731 * size, -0.101405 * size),
                  (0.340288 * size, 0.439472 * size, -0.101405 * size),
                  (-0.304998 * size, 0.42036 * size, -0.101405 * size),
                  (-0.299403 * size, -0.075203 * size, -0.101405 * size),
                  ]
    edges = [(0, 3), (1, 2), (4, 5), (6, 7), (8, 11), (9, 10), (10, 11), (2, 4), (3, 7), (6, 8),
                  (5, 9), (0, 12), (12, 13), (1, 13), ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_FootFK_widget(name, size):
    verts = [(0.0885234 * size, 0.10404 * size, 0.0189609 * size),
                  (0.0972674 * size, -0.00841428 * size, 0.0165839 * size),
                  (0.126096 * size, -0.0378263 * size, -0.0366201 * size),
                  (0.0875033 * size, 0.122758 * size, -0.0672751 * size),
                  (0.0658754 * size, -0.0188913 * size, 0.0427428 * size),
                  (0.0782675 * size, -0.0707923 * size, 0.0211469 * size),
                  (-0.00439757 * size, -0.0286653 * size, 0.0523848 * size),
                  (-0.0130606 * size, -0.0835773 * size, 0.0263399 * size),
                  (-0.0707766 * size, -0.0360213 * size, 0.0154009 * size),
                  (-0.0659936 * size, -0.0799973 * size, 0.00207888 * size),
                  (-0.0816926 * size, -0.00563228 * size, -0.000777126 * size),
                  (-0.100356 * size, -0.0328763 * size, -0.0538372 * size),
                  (-0.0982656 * size, 0.0887017 * size, 0.00384392 * size),
                  (-0.108992 * size, 0.0871947 * size, -0.0409721 * size),
                  ]
    edges = [(0, 3), (0, 1), (2, 3), (2, 5), (1, 4), (4, 6), (5, 7), (7, 9), (6, 8), (8, 10),
                  (9, 11), (11, 13), (10, 12), (12, 13), ]
    faces = []
    createShapeWidget(name, verts, edges, faces)

def create_ToeFK_widget(name, size):
    verts = [(-0.101995 * size, 0.0263964 * size, -0.0235766 * size),
                      (-0.0925033 * size, -0.0169166 * size, -0.0341907 * size),
                      (-0.0613033 * size, -0.052062 * size, 0.00326335 * size),
                      (-0.0694553 * size, 0.0206934 * size, 0.0206393 * size),
                      (0.0107217 * size, -0.047199 * size, 0.0178714 * size),
                      (0.00529268 * size, 0.0228514 * size, 0.0370123 * size),
                      (0.0729647 * size, 0.0300304 * size, 0.0213844 * size),
                      (0.0670567 * size, -0.035153 * size, 0.00761437 * size),
                      (0.0845687 * size, 0.00711343 * size, -0.0287766 * size),
                      (0.0846527 * size, 0.0442454 * size, -0.0212407 * size),
                      ]
    edges = [(0, 3), (0, 1), (1, 2), (2, 4), (3, 5), (6, 9), (7, 8), (8, 9), (5, 6), (4, 7),
                      ]
    faces = []
    createShapeWidget(name, verts, edges, faces)



def create_FootIK_widget(name, size):
    verts = [(-0.171127 * size, 0.465439 * size, 7.58296e-08 * size),
                  (-0.142435 * size, 0.349735 * size, 5.69791e-08 * size),
                  (-0.129046 * size, 0.518417 * size, 8.44609e-08 * size),
                  (0.039468 * size, 0.588767 * size, 9.59223e-08 * size),
                  (-0.083372 * size, 0.569455 * size, 9.2776e-08 * size),
                  (0.147191 * size, 0.580176 * size, 9.45227e-08 * size),
                  (0.225159 * size, 0.36171 * size, 5.893e-08 * size),
                  (0.21849 * size, 0.483523 * size, 7.87759e-08 * size),
                  (0.15566 * size, -0.345269 * size, -5.62515e-08 * size),
                  (0.22519 * size, -0.23598 * size, -3.8446e-08 * size),
                  (0.255613 * size, -0.003512 * size, -5.72177e-10 * size),
                  (0.019641 * size, -0.456237 * size, -7.43304e-08 * size),
                  (-0.103311 * size, -0.417328 * size, -6.79914e-08 * size),
                  (-0.166846 * size, -0.007033 * size, -1.14582e-09 * size),
                  (-0.210728 * size, -0.176448 * size, -2.8747e-08 * size),
                  (-0.174354 * size, -0.304694 * size, -4.9641e-08 * size),
                  (0.232535 * size, 0.23585 * size, 3.84248e-08 * size),
                  (-0.121248 * size, 0.232506 * size, 3.788e-08 * size),
                  ]
    edges = [(0, 2), (0, 1), (3, 4), (3, 5), (6, 7), (5, 7), (8, 9), (9, 10), (8, 11), (11, 12),
                  (13, 14), (14, 15), (10, 16), (13, 17), (6, 16), (1, 17), (2, 4), (12, 15), ]
    faces = []
    createShapeWidget(name,verts,edges,faces)


"---------------------------------------------------------------------------------------------------------------------------------------------"

classes = []


def register():
    for cls in classes:
        try:
            bpy.utils.register_class(cls)
        except RuntimeError:
            pass


def unregister():
    for cls in classes:
        try:
            bpy.utils.unregister_class(cls)
        except RuntimeError:
            pass